// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sprint.DAL.EFCore.Data;

#nullable disable

namespace Sprint.DAL.EFCore.Migrations
{
    [DbContext(typeof(SprintDbContext))]
    [Migration("20250524201955_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Court", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourtNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Courts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b20733f6-5e38-4b35-9b25-2acf9aa9d69f"),
                            CourtNumber = "A",
                            HourlyRate = 1000m,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("94dc0241-8559-43a9-b3b7-f1afacaf5db8"),
                            CourtNumber = "B",
                            HourlyRate = 800m,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("9861fc0e-c019-46d1-a6cc-7493f5c472a9"),
                            CourtNumber = "C",
                            HourlyRate = 800m,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("3cf12330-a729-46b7-a157-26f885ef0485"),
                            CourtNumber = "D",
                            HourlyRate = 500m,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.CourtReservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourtId");

                    b.HasIndex("UserId");

                    b.ToTable("CourtReservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eaa31107-6912-4f8e-9194-1c0c065d1a13"),
                            CourtId = new Guid("b20733f6-5e38-4b35-9b25-2acf9aa9d69f"),
                            Created = new DateTime(2022, 9, 20, 9, 53, 34, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 29, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 9, 29, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("f9d5aaee-5282-4b8d-81c8-e4fbd4a7dea5")
                        },
                        new
                        {
                            Id = new Guid("032e0700-793a-4f1a-940c-6e363a7f8595"),
                            CourtId = new Guid("9861fc0e-c019-46d1-a6cc-7493f5c472a9"),
                            Created = new DateTime(2022, 9, 21, 6, 51, 34, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 30, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 9, 30, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("f9d5aaee-5282-4b8d-81c8-e4fbd4a7dea5")
                        },
                        new
                        {
                            Id = new Guid("ffad232c-e49c-4c17-8951-8ef6e798a137"),
                            CourtId = new Guid("9861fc0e-c019-46d1-a6cc-7493f5c472a9"),
                            Created = new DateTime(2022, 9, 5, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 11, 17, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = true,
                            To = new DateTime(2022, 11, 17, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("f9d5aaee-5282-4b8d-81c8-e4fbd4a7dea5")
                        },
                        new
                        {
                            Id = new Guid("aba9140c-2fbe-4716-823e-a80076dbea05"),
                            CourtId = new Guid("b20733f6-5e38-4b35-9b25-2acf9aa9d69f"),
                            Created = new DateTime(2022, 9, 20, 9, 53, 34, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 29, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 9, 29, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("3bb62eca-1148-48c4-aea1-a1afd822e754")
                        },
                        new
                        {
                            Id = new Guid("7172178f-9529-409a-8ea1-1f9cd9a6c7db"),
                            CourtId = new Guid("b20733f6-5e38-4b35-9b25-2acf9aa9d69f"),
                            Created = new DateTime(2022, 9, 28, 19, 19, 19, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 10, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 10, 1, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("3bb62eca-1148-48c4-aea1-a1afd822e754")
                        },
                        new
                        {
                            Id = new Guid("3cc5ea0a-234f-44f5-bc40-b9e30d99a26e"),
                            CourtId = new Guid("94dc0241-8559-43a9-b3b7-f1afacaf5db8"),
                            Created = new DateTime(2022, 9, 15, 18, 4, 4, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 16, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 9, 16, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("92b7e4cf-4a7e-445d-87b1-e1b22c3ae743")
                        },
                        new
                        {
                            Id = new Guid("626a4852-3fd6-4b73-87a5-cde2b2fc330b"),
                            CourtId = new Guid("94dc0241-8559-43a9-b3b7-f1afacaf5db8"),
                            Created = new DateTime(2022, 9, 16, 9, 53, 34, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 17, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = true,
                            To = new DateTime(2022, 9, 17, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("92b7e4cf-4a7e-445d-87b1-e1b22c3ae743")
                        },
                        new
                        {
                            Id = new Guid("f037f5cc-5268-4798-9d37-e8e11c2c0f4b"),
                            CourtId = new Guid("3cf12330-a729-46b7-a157-26f885ef0485"),
                            Created = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 12, 31, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 12, 31, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("2142d07c-15ef-4162-8e6a-b1d14f34c7c7")
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Trainer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Trainers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4f4a3974-482c-4322-82ed-097696f99044"),
                            Description = "I know how to play, that's all",
                            HourlyRate = 2000m,
                            IsDeleted = false,
                            UserId = new Guid("fd7603ed-c854-47a9-a1b1-d29c6331b9b8")
                        },
                        new
                        {
                            Id = new Guid("8b405a02-5743-42ca-8a9a-3f2169c8304c"),
                            Description = "I know how to play even better, that's all",
                            HourlyRate = 3485m,
                            IsDeleted = false,
                            UserId = new Guid("29b36392-6efa-4000-a4d1-0c45951e34dd")
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Hide")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TrainerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId");

                    b.ToTable("TrainerPhotos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0beaf8c1-5e2a-48db-a3f1-d4724eb04ec9"),
                            Hide = false,
                            IsDeleted = false,
                            Path = "https://static8.depositphotos.com/1460388/938/i/600/depositphotos_9388060-stock-photo-next-rally.jpg",
                            TrainerId = new Guid("4f4a3974-482c-4322-82ed-097696f99044")
                        },
                        new
                        {
                            Id = new Guid("78895bb4-efee-473e-9018-658a95eaaec8"),
                            Hide = false,
                            IsDeleted = false,
                            Path = "https://static8.depositphotos.com/1460388/938/i/600/depositphotos_9388060-stock-photo-next-rally.jpg",
                            TrainerId = new Guid("4f4a3974-482c-4322-82ed-097696f99044")
                        },
                        new
                        {
                            Id = new Guid("cd757cf4-c84b-4bab-ba03-a2e4ab9c87f5"),
                            Hide = true,
                            IsDeleted = false,
                            Path = "https://static8.depositphotos.com/1460388/938/i/600/depositphotos_9388060-stock-photo-next-rally.jpg",
                            TrainerId = new Guid("8b405a02-5743-42ca-8a9a-3f2169c8304c")
                        },
                        new
                        {
                            Id = new Guid("6632f38a-098c-4188-bf6c-0997d33f7d09"),
                            Hide = true,
                            IsDeleted = false,
                            Path = "https://static8.depositphotos.com/1460388/938/i/600/depositphotos_9388060-stock-photo-next-rally.jpg",
                            TrainerId = new Guid("8b405a02-5743-42ca-8a9a-3f2169c8304c")
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourtReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("TrainerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourtReservationId")
                        .IsUnique();

                    b.HasIndex("TrainerId");

                    b.ToTable("TrainerReservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("774cb8b1-ce75-45f5-b256-d81b9dcdcc0a"),
                            CourtReservationId = new Guid("626a4852-3fd6-4b73-87a5-cde2b2fc330b"),
                            IsDeleted = true,
                            TrainerId = new Guid("4f4a3974-482c-4322-82ed-097696f99044")
                        },
                        new
                        {
                            Id = new Guid("32c69f2b-e44f-4e1a-8758-0549c1f7de92"),
                            CourtReservationId = new Guid("3cc5ea0a-234f-44f5-bc40-b9e30d99a26e"),
                            IsDeleted = false,
                            TrainerId = new Guid("4f4a3974-482c-4322-82ed-097696f99044")
                        },
                        new
                        {
                            Id = new Guid("33f29cef-6644-4cb8-b607-16d266575767"),
                            CourtReservationId = new Guid("f037f5cc-5268-4798-9d37-e8e11c2c0f4b"),
                            IsDeleted = false,
                            TrainerId = new Guid("8b405a02-5743-42ca-8a9a-3f2169c8304c")
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Hide")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("ReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId")
                        .IsUnique();

                    b.ToTable("TrainerReviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4f609a6c-d3be-459c-95e2-f8df4debfa04"),
                            Hide = false,
                            IsDeleted = false,
                            Rating = 5,
                            ReservationId = new Guid("33f29cef-6644-4cb8-b607-16d266575767"),
                            Text = "Awesome!"
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrainer")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9d5aaee-5282-4b8d-81c8-e4fbd4a7dea5"),
                            DateOfBirth = new DateTime(2001, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "514329@mail.muni.cz",
                            FirstName = "Adam",
                            IsDeleted = false,
                            IsTrainer = false,
                            LastName = "Mydla",
                            PasswordHash = "AQAAAAEAACcQAAAAEFYDAxi2JUB0XAOJMRelra7pPklyW3I6XQaw9cOe33/ic9+BavRdOF9tp9qS6bJGLQ==",
                            PhotoPath = "https://img3.stockfresh.com/files/w/wavebreak_media/m/12/8944331_stock-photo-badminton-player-holding-racket-and-shuttlecock.jpg",
                            Role = 0,
                            SecurityStamp = "1abcdef"
                        },
                        new
                        {
                            Id = new Guid("3bb62eca-1148-48c4-aea1-a1afd822e754"),
                            DateOfBirth = new DateTime(1995, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pppeter@nonexistentmail.com",
                            FirstName = "Peter",
                            IsDeleted = false,
                            IsTrainer = false,
                            LastName = "Griffin",
                            PasswordHash = "AQAAAAEAACcQAAAAEFYDAxi2JUB0XAOJMRelra7pPklyW3I6XQaw9cOe33/ic9+BavRdOF9tp9qS6bJGLQ==",
                            PhotoPath = "https://img3.stockfresh.com/files/w/wavebreak_media/m/12/8944331_stock-photo-badminton-player-holding-racket-and-shuttlecock.jpg",
                            Role = 0,
                            SecurityStamp = "2abcdef"
                        },
                        new
                        {
                            Id = new Guid("2142d07c-15ef-4162-8e6a-b1d14f34c7c7"),
                            DateOfBirth = new DateTime(1955, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "monic@nonexistentmail.com",
                            FirstName = "Monica",
                            IsDeleted = false,
                            IsTrainer = false,
                            LastName = "Bellucci",
                            PasswordHash = "AQAAAAEAACcQAAAAEFYDAxi2JUB0XAOJMRelra7pPklyW3I6XQaw9cOe33/ic9+BavRdOF9tp9qS6bJGLQ==",
                            PhotoPath = "https://img3.stockfresh.com/files/w/wavebreak_media/m/12/8944331_stock-photo-badminton-player-holding-racket-and-shuttlecock.jpg",
                            Role = 0,
                            SecurityStamp = "4abcdef"
                        },
                        new
                        {
                            Id = new Guid("92b7e4cf-4a7e-445d-87b1-e1b22c3ae743"),
                            DateOfBirth = new DateTime(1993, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rntr@nonexistentmail.com",
                            FirstName = "Roman",
                            IsDeleted = false,
                            IsTrainer = false,
                            LastName = "NieTenRoman",
                            PasswordHash = "AQAAAAEAACcQAAAAEFYDAxi2JUB0XAOJMRelra7pPklyW3I6XQaw9cOe33/ic9+BavRdOF9tp9qS6bJGLQ==",
                            PhotoPath = "https://img3.stockfresh.com/files/w/wavebreak_media/m/12/8944331_stock-photo-badminton-player-holding-racket-and-shuttlecock.jpg",
                            Role = 0,
                            SecurityStamp = "3abcdef"
                        },
                        new
                        {
                            Id = new Guid("fd7603ed-c854-47a9-a1b1-d29c6331b9b8"),
                            DateOfBirth = new DateTime(1995, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rhanculak@mail.muni.cz",
                            FirstName = "Radovan",
                            IsDeleted = false,
                            IsTrainer = true,
                            LastName = "Hančuľák",
                            PasswordHash = "AQAAAAEAACcQAAAAEFYDAxi2JUB0XAOJMRelra7pPklyW3I6XQaw9cOe33/ic9+BavRdOF9tp9qS6bJGLQ==",
                            PhotoPath = "https://img3.stockfresh.com/files/w/wavebreak_media/m/12/8944331_stock-photo-badminton-player-holding-racket-and-shuttlecock.jpg",
                            Role = 1,
                            SecurityStamp = "5abcdef"
                        },
                        new
                        {
                            Id = new Guid("29b36392-6efa-4000-a4d1-0c45951e34dd"),
                            DateOfBirth = new DateTime(1995, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "493352@mail.muni.cz",
                            FirstName = "Jitka",
                            IsDeleted = false,
                            IsTrainer = true,
                            LastName = "Viceníková",
                            PasswordHash = "AQAAAAEAACcQAAAAEFYDAxi2JUB0XAOJMRelra7pPklyW3I6XQaw9cOe33/ic9+BavRdOF9tp9qS6bJGLQ==",
                            PhotoPath = "https://img3.stockfresh.com/files/w/wavebreak_media/m/12/8944331_stock-photo-badminton-player-holding-racket-and-shuttlecock.jpg",
                            Role = 1,
                            SecurityStamp = "6abcdef"
                        },
                        new
                        {
                            Id = new Guid("9c13cb1f-cf48-4b42-acc4-9e2df5c714f8"),
                            DateOfBirth = new DateTime(1995, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@sprint.cz",
                            FirstName = "Admin",
                            IsDeleted = false,
                            IsTrainer = true,
                            LastName = "Admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEFYDAxi2JUB0XAOJMRelra7pPklyW3I6XQaw9cOe33/ic9+BavRdOF9tp9qS6bJGLQ==",
                            PhotoPath = "https://img3.stockfresh.com/files/w/wavebreak_media/m/12/8944331_stock-photo-badminton-player-holding-racket-and-shuttlecock.jpg",
                            Role = 2,
                            SecurityStamp = "6abcdef"
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.CourtReservation", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.Court", "Court")
                        .WithMany("Reservations")
                        .HasForeignKey("CourtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sprint.DAL.EFCore.Models.User", "User")
                        .WithMany("CourtReservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Court");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Trainer", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.User", "User")
                        .WithOne("Trainer")
                        .HasForeignKey("Sprint.DAL.EFCore.Models.Trainer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerPhoto", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.Trainer", "Trainer")
                        .WithMany("Photos")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReservation", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.CourtReservation", "CourtReservation")
                        .WithOne("TrainerReservation")
                        .HasForeignKey("Sprint.DAL.EFCore.Models.TrainerReservation", "CourtReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sprint.DAL.EFCore.Models.Trainer", "Trainer")
                        .WithMany("Reservations")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CourtReservation");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReview", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.TrainerReservation", "Reservation")
                        .WithOne("TrainerReview")
                        .HasForeignKey("Sprint.DAL.EFCore.Models.TrainerReview", "ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Court", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.CourtReservation", b =>
                {
                    b.Navigation("TrainerReservation");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Trainer", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReservation", b =>
                {
                    b.Navigation("TrainerReview");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.User", b =>
                {
                    b.Navigation("CourtReservations");

                    b.Navigation("Trainer");
                });
#pragma warning restore 612, 618
        }
    }
}
